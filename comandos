para incluir o arquivo no controle do git:

git add comandos

git add* (inclui todos os arquivos que não estão sobre controle ainda)


para salva o arquivo (commit)


git commit -m "arquivo adicionado"


para incluir no repositório


git push local master


============**********+++

git status

verifica arquivos a serem adicionados, e arquivos que já foram adicionados porém não comitados


========

git remote add origin https://github.com/RicardoBenetero/alura-git.git

para adicionar o repositorio do github

==========================================

git push origin master

para enviar o codigo do repo local para o github

criei um token para informar no lugar da senha pois não suporta mais autenticação com senha o github.


===============================================

git log 

mostra todos os commits

===========================================

git branch titulo

cria novo branch

======================================

git branch


mostra todos branchs

==================================

git checkout titulo

muda para outro branch

======================================

git checkout -b lista

cria o branch e já troca para ele

==================================================
git merge titulo

traz as alterações do branch titulo para a branch master (observação: necessário estar na branch master)


===============================================

git log --graph

mostra as linhas especificas de desenvolvimento

================================================

git pull origin master

baixar para o repositorio local do repositorio remoto github


==================================================*

git checkout -- index.html

defaz alteração no arquivo (ainda adicionado com add)

++++++++++++++++++++++++++++++++++++++++++++++++++++++=

git reset HEAD -- index.html

defaz alteração no arquivo (quando já feito o add)


em seguida para desfazer alteração faz o git checkout -- index.html

================================================================

desfazer quando já fez o commit

git log

copia o hash

e

git revert efa9d3d1e464980424aa9aa57b08f4e1d76e14c9


==============================================================

git stash 

salva alterações em local temporário para continuar trabalhando depois (não entra em commits , logs)



===================================================================

git stash list

mostra tudo que está no local temporário


=======================================================================

git stash pop


traz as alterações do stash e exclui a alteração da lista de stash

=======================================================================
git log --oneline

log dos commits em uma linha

========================================================================
git checkout 1e47847


vai até um commit em especifico para visualizar o código no momento deste commit, todo commit feito neste momento é desprezado
quando voltar para master, para ser considerado esses commits é necessário criar um branch novo.

========================================================================

git diff 6589078..9e2c410 

mostra o que foi alterado de um commit para outro


=======================================================================
git diff

mostra o que foi alterado antes de fazer o add

========================================================================
git log -n 2

mostra os dois ultimos commits

===========================================================================

git tag -a v0.1.0 -m "lançando versão beta"


gera um ponto no marca, uma tag por exemplo que marca a entrega de uma versão

===================================================================

git tag

lista todas as tags criadas

====================================================================

git remote -v

mostra os repositorios remotos

=======================================================================
Definir um endereço de e-mail no Git

git config --local user.email "rcarvalho.007@gmail.com"

git config  user.email


Defina um nome de usuário do Git:

git config --local user.name "Ricardo Benetero"


git config user.name

=======================================================


